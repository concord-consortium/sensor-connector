<?xml version="1.0" encoding="UTF-8"?>
<project name="SensorConnector" default="build" basedir="." xmlns:fx="javafx:com.sun.javafx.tools.ant">

  <property environment="env" />
  <property name="APP_NAME" value="SensorConnector" />
  <property name="APP_NAME_MAC" value="${APP_NAME}.app" />
  <property name="APP_DISPLAY_NAME" value="Sensor Connector" />
  <property name="APP_JAVA_CLASS" value="org.concord.sensor.server.${APP_NAME}" />
  <property name="APP_VERSION" value="${env.SC_APP_VERSION}" />
  <tstamp/><!-- Sets DSTAMP ('yyyyMMdd'), TSTAMP ('hhmm'), and TODAY ('MMMM dd yyyy') -->
  <property name="APP_VERSIONED_NAME" value="${APP_NAME}-${APP_VERSION}" />
  <property name="APP_TIMESTAMPED_NAME" value="${APP_VERSIONED_NAME}-${DSTAMP}-${TSTAMP}" />
  <condition property="certname" value="${env.CERT_NAME}">
    <isset property="env.CERT_NAME" />
  </condition>
  <condition property="certname" value="Developer ID Application: Concord Consortium">
    <and>
      <os family="mac" />
      <not>
        <isset property="certname" />
      </not>
    </and>
  </condition>
  <condition property="certname" value="Concord Consortium">
    <and>
      <os family="windows" />
      <not>
        <isset property="certname" />
      </not>
    </and>
  </condition>

  <condition property="jre" value="${env.JRE_HOME}">
    <isset property="env.JRE_HOME" />
  </condition>

  <echo message="Using JDK located at: ${env.JAVA_HOME}" />
  <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask" classpath="lib/appbundler-1.0ea.jar" />
  <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath=".;${env.JAVA_HOME}/lib/ant-javafx.jar"/>

  <target name="clean">
    <delete removeNotFollowedSymlinks="true" followSymlinks="false" includeEmptyDirs="true" failonerror="false">
      <fileset dir="dist" />
    </delete>
  </target>

  <target name="prep" depends="clean">
    <mkdir dir="dist" />
    <mkdir dir="dist/app" />
    <mkdir dir="dist/app/.background" />
    <mkdir dir="dist/package" />
    <mkdir dir="dist/package/scripts" />
    <mkdir dir="dist/package/resources" />
  </target>

  <target name="build" depends="prep">
    <exec executable="mvn.cmd" failonerror="true" osfamily="windows">
      <arg value="-U" />
      <arg value='-DexcludeClassifiers="linux-x86,linux-x86_64,linux-arm,windows-x86_64,osx-x86,osx-x86_64"' />
      <arg value="clean" />
      <arg value="package" />
      <arg value="dependency:copy-dependencies" />
    </exec>
    <exec executable="mvn" failonerror="true" osfamily="mac">
      <arg value="-U" />
      <arg value='-DexcludeClassifiers="linux-x86,linux-x86_64,linux-arm,windows-x86,windows-x86_64"' />
      <arg value="clean" />
      <arg value="package" />
      <arg value="dependency:copy-dependencies" />
    </exec>
  </target>

  <target name="build-win-x64" depends="prep">
    <exec executable="mvn.cmd" failonerror="true" osfamily="windows">
      <arg value="-U" />
      <arg value='-DexcludeClassifiers="linux-x86,linux-x86_64,linux-arm,windows-x86,osx-x86,osx-x86_64"' />
      <arg value="clean" />
      <arg value="package" />
      <arg value="dependency:copy-dependencies" />
    </exec>
  </target>

  <target name="build-mac-x64" depends="prep">
    <exec executable="mvn" failonerror="true" osfamily="mac">
      <arg value="-U" />
      <arg value='-DexcludeClassifiers="linux-x86,linux-x86_64,linux-arm,windows-x86,windows-x86_64"' />
      <arg value="clean" />
      <arg value="package" />
      <arg value="dependency:copy-dependencies" />
    </exec>
  </target>

  <target name="fx-package">
    <fail unless="env.JAVA_HOME" message="You must set JAVA_HOME (eg: 'export JAVA_HOME=`/usr/libexec/java_home`')" />
    <copy todir="target/dependency">
      <fileset dir="target">
        <include name="sensor-connector-*.jar" />
      </fileset>
    </copy>
    <fx:deploy verbose="true" nativeBundles="msi" width="100" height="100" outdir="dist/" outfile="${APP_NAME}">
      <fx:info title="${APP_DISPLAY_NAME}" vendor="Concord Consortium" description="${APP_DISPLAY_NAME} Application" />
      <fx:application name="${APP_NAME}" mainClass="${APP_JAVA_CLASS}" toolkit="swing" version="${APP_VERSION}" />
      <!-- cf. https://stackoverflow.com/a/24027027 -->
      <fx:platform basedir="${env.JAVA_HOME}" />
      <fx:resources>
        <fx:fileset dir="target/dependency">
          <include name="**/*.jar" />
        </fx:fileset>
        <fx:fileset dir="${env.JAVA_HOME}/jre/bin">
          <include name="msvcr100.dll" />
        </fx:fileset>
        <fx:fileset dir="resources">
          <include name="ca.cert.pem" />
          <include name="win-install-cert.bat" />
          <include name="win-uninstall-cert.bat" />
          <include name="cert8.db" />
          <include name="key3.db" />
          <include name="secmod.db" />
        </fx:fileset>
        <fx:fileset dir="resources/certutil">
          <include name="**/*" />
        </fx:fileset>
      </fx:resources>
    </fx:deploy>
    <exec executable="signtool.exe" dir="dist/bundles" failonerror="false">
      <arg line="sign /n '${certname}' /tr http://tsa.starfieldtech.com /td SHA256 /v ${APP_VERSIONED_NAME}.msi" />
    </exec>
    <move file="dist/bundles/${APP_VERSIONED_NAME}.msi" tofile="dist/${APP_TIMESTAMPED_NAME}.msi" />
  </target>

  <target name="win-bundle">
    <copy file="dist/${APP_TIMESTAMPED_NAME}.msi" tofile="dist/${APP_NAME}.msi" />
    <exec executable="script/win-bundle.bat">
      <env key="APP_VERSION" value="${APP_VERSION}"/>
    </exec>
    <move file="dist/${APP_NAME}-bundle.exe" tofile="dist/${APP_TIMESTAMPED_NAME}-unsigned.exe" />
    <exec executable="insignia.exe" dir="dist" failonerror="false">
      <arg line='-ib ${APP_TIMESTAMPED_NAME}-unsigned.exe -o engine.exe' />
    </exec>
    <exec executable="signtool.exe" dir="dist" failonerror="false">
      <arg line="sign /n '${certname}' /tr http://tsa.starfieldtech.com /td SHA256 /v engine.exe" />
    </exec>
    <exec executable="insignia.exe" dir="dist" failonerror="false">
      <arg line='-ab engine.exe ${APP_TIMESTAMPED_NAME}-unsigned.exe -o ${APP_TIMESTAMPED_NAME}.exe' />
    </exec>
    <echo message="Built: ${APP_TIMESTAMPED_NAME}" />
  </target>

  <target name="win-bundle-x64" depends="build-win-x64, fx-package, win-bundle" />

  <target name="win-bundle-x86" depends="build, fx-package, win-bundle" />

  <target name="mac-stage" depends="build">
    <condition property="jre" value="/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK">
      <not>
        <isset property="jre" />
      </not>
    </condition>
    <echo message="JRE: ${jre}${line.separator}Set JRE_HOME to override!" />
    <copy file="resources/bg.png" todir="dist/app/.background" />
    <mkdir dir="dist/app/${APP_NAME_MAC}" />
    <mkdir dir="dist/app/${APP_NAME_MAC}/Contents" />
    <mkdir dir="dist/app/${APP_NAME_MAC}/Contents/MacOS" />
    <mkdir dir="dist/app/${APP_NAME_MAC}/Contents/Resources" />
    <mkdir dir="dist/app/${APP_NAME_MAC}/Contents/Java" />
    <mkdir dir="dist/app/${APP_NAME_MAC}/Contents/Frameworks" />
    <copy file="resources/cc-lightbulb.icns" todir="dist/app/${APP_NAME_MAC}/Contents/Resources" />
    <copy file="resources/Info.plist" todir="dist/app/${APP_NAME_MAC}/Contents" />
    <copy file="resources/run.sh" todir="dist/app/${APP_NAME_MAC}/Contents/MacOS" />
    <copy todir="dist/app/${APP_NAME_MAC}/Contents/MacOS" flatten="true">
      <fileset dir="resources/certutil-mac" />
    </copy>
    <chmod perm="a+x" file="dist/app/${APP_NAME_MAC}/Contents/MacOS/run.sh" />
    <chmod perm="a+x" file="dist/app/${APP_NAME_MAC}/Contents/MacOS/certutilff" />
    <copy todir="dist/app/${APP_NAME_MAC}/Contents/Java" flatten="true">
      <fileset dir="target">
        <include name="**/*.jar" />
      </fileset>
    </copy>
    <copy file="resources/libusb-1.0.dylib" todir="dist/app/${APP_NAME_MAC}/Contents/Frameworks" />
    <exec executable="./script/copy_and_remove_symlinks.sh">
      <arg value="${jre}" />
      <arg value="${user.dir}/dist/app/${APP_NAME_MAC}/Contents/Resources/jdk" />
    </exec>
    <exec executable="rmdir" dir="dist/app/${APP_NAME_MAC}/Contents/Resources/jdk/Home">
      <arg line='bundle' />
    </exec>
    <exec executable="bash" dir="dist/app/${APP_NAME_MAC}/Contents/Resources/jdk/Home">
      <arg line='-c "ln -s ../ bundle"' />
    </exec>
  </target>

  <target name="mac-stage-x64" depends="build-mac-x64">
    <exec executable="/usr/libexec/java_home" outputproperty="system_jre" />
    <condition property="jre" value="${system_jre}">
      <not>
        <isset property="jre" />
      </not>
    </condition>
    <echo message="JRE: ${jre} - Set JRE_HOME to override!" />
    <!-- Run script to set JRE_NAME from JRE_HOME -->
    <exec executable="./script/jre-name.sh" outputproperty="jre_name" />
    <condition property="jre_name" value="${env.JRE_NAME}">
      <isset property="env.JRE_NAME" />
    </condition>
    <echo message="JRE_NAME: ${jre_name} - Set JRE_NAME to override!" />
    <copy file="resources/bg.png" todir="dist/app/.background" />
    <!--
      Build App using AppBundler, which is the App Bundling package that preceded fx:deploy.
      Should consider switching to fx:deploy at some point.
      https://docs.oracle.com/javase/7/docs/technotes/guides/jweb/packagingAppsForMac.html
      Note that there is also a third-party fork of AppBundler with some additional features:
      https://bitbucket.org/infinitekind/appbundler/
    -->
    <bundleapp outputdirectory="dist/app"
               name="${APP_NAME}" displayname="${APP_DISPLAY_NAME}"
               executableName="${APP_NAME}"
               shortversion="${APP_VERSION}" version="${APP_VERSION}"
               icon="resources/cc-lightbulb.icns"
               identifier="${APP_JAVA_CLASS}"
               mainclassname="${APP_JAVA_CLASS}">

      <arch name="x86_64" />

      <runtime dir="${jre}" />
      <classpath dir="target/">
        <include name="**/*.jar" />
      </classpath>

      <option value="-Xmx512M" name="Xmx" />
      <option value="-Xms32M" name="Xms" />

      <bundledocument
        extensions="ccsc"
        icon="resources/cc-lightbulb.icns"
        name="${APP_DISPLAY_NAME} Doc"
        role="Viewer"
      />
    </bundleapp>
    <!-- copy additional plist entries that aren't supported by AppBundler. -->
    <exec executable="/usr/libexec/PlistBuddy">
      <arg line='-c "merge resources/Info-merge.plist" dist/app/${APP_NAME_MAC}/Contents/Info.plist' />
    </exec>
    <copy todir="dist/app/${APP_NAME_MAC}/Contents/MacOS" flatten="true">
      <fileset dir="resources/certutil-mac" />
    </copy>
    <chmod perm="a+x" file="dist/app/${APP_NAME_MAC}/Contents/MacOS/${APP_NAME}" />
    <chmod perm="a+x" file="dist/app/${APP_NAME_MAC}/Contents/MacOS/certutilff" />

    <exec executable="rm" dir="dist/app/${APP_NAME_MAC}/Contents/PlugIns/${jre_name}/Contents/MacOS/">
      <arg value="libjli.dylib" />
    </exec>
    <copy file="dist/app/${APP_NAME_MAC}/Contents/PlugIns/${jre_name}/Contents/Home/jre/lib/jli/libjli.dylib"
         todir="dist/app/${APP_NAME_MAC}/Contents/PlugIns/${jre_name}/Contents/MacOS/" />
  </target>

  <target name="mac-sign">
    <exec executable="codesign" failonerror="false">
      <arg value="-f" />
      <arg value="--deep" />
      <arg value="-s" />
      <arg value="${certname}" />
      <arg value="dist/app/${APP_NAME_MAC}" />
    </exec>
  </target>

  <target name="mac-package" depends="prep,build,mac-stage,mac-sign">
    <exec executable="./script/create_pkg.sh" />
    <exec executable="./script/create_dmg.sh" />
    <exec executable="codesign" failonerror="false">
      <arg value="-f" />
      <arg value="-s" />
      <arg value="${certname}" />
      <arg value="dist/${APP_NAME}.dmg" />
    </exec>
    <move file="dist/${APP_NAME}.dmg" tofile="dist/${APP_TIMESTAMPED_NAME}-x32.dmg" />
  </target>

  <target name="mac-package-x64" depends="prep,build,mac-stage-x64,mac-sign">
    <exec executable="./script/create_pkg.sh" />
    <exec executable="./script/create_dmg.sh" />
    <exec executable="codesign" failonerror="false">
      <arg value="-f" />
      <arg value="-s" />
      <arg value="${certname}" />
      <arg value="dist/${APP_NAME}.dmg" />
    </exec>
    <move file="dist/${APP_NAME}.dmg" tofile="dist/${APP_TIMESTAMPED_NAME}-x64.dmg" />
  </target>

</project>
